/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 08 12:25:05 GMT 2022
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "ew+/zftut.3k}";
      NumberUtils.isNumber("ew+/zftut.3k}");
      String string1 = "-0Xw]YV?XJ#l&*|k0e?aJ'";
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("-0Xw]YV?XJ#l&*|k0e?aJ'");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-w]YV?XJ#l&*|k0e?aJ'\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      NumberUtils.toFloat("SA>fm7Hy%D^N6");
      NumberUtils.max(1, (-2502), 0);
      NumberUtils.toByte("!cjPvxZR", (byte)0);
      NumberUtils.isDigits("");
      NumberUtils.toShort("");
      long[] longArray0 = new long[1];
      longArray0[0] = (long) (byte)0;
      NumberUtils.max(longArray0);
      NumberUtils.max((int) (byte)0, 1, 1683);
      NumberUtils.max(1, (int) (byte)0, (-2502));
      float[] floatArray0 = new float[6];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (float) (short)0;
      floatArray0[2] = 0.0F;
      floatArray0[3] = (float) (byte)0;
      floatArray0[4] = (float) 0L;
      floatArray0[5] = 0.0F;
      NumberUtils.max(floatArray0);
      NumberUtils.max(floatArray0);
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short) (byte)0;
      shortArray0[1] = (short)0;
      shortArray0[2] = (short)0;
      shortArray0[3] = (short)0;
      shortArray0[4] = (short)0;
      shortArray0[5] = (short) (byte)0;
      NumberUtils.min(shortArray0);
      try { 
        NumberUtils.createNumber("-e");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // -e is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      NumberUtils.isNumber("0xqUi@OJE:(FdQZ");
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-572.842069037898);
      doubleArray0[1] = 1272.58817244583;
      doubleArray0[2] = 1076.09080559066;
      doubleArray0[4] = (-572.842069037898);
      doubleArray0[4] = 2735.863102445;
      doubleArray0[5] = (-3.7425967685922394);
      NumberUtils.max(doubleArray0);
      NumberUtils.isNumber("---0X6BmFL<%*%YCYDv9|k\"");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte) (-116);
      NumberUtils.min(byteArray0);
      NumberUtils.isNumber("...");
      // Undeclared exception!
      try { 
        NumberUtils.max((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 32;
      intArray0[1] = (-1231);
      intArray0[2] = 832;
      intArray0[3] = 32;
      NumberUtils.max(intArray0);
      NumberUtils.toLong("5");
      NumberUtils.isNumber("5");
      NumberUtils.max(intArray0);
      NumberUtils.toFloat("pkY9@+t2}/ow4Bh");
      float[] floatArray0 = new float[3];
      floatArray0[0] = (-832.8944F);
      floatArray0[1] = (float) 5L;
      floatArray0[2] = (float) 832;
      NumberUtils.max(floatArray0);
      NumberUtils.createFloat("5");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      NumberUtils.max(byteArray0);
      NumberUtils.createBigInteger((String) null);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      NumberUtils.createBigInteger("41");
      NumberUtils.toShort("C_`.1m1sNvy@c");
      NumberUtils.isDigits("C_`.1m1sNvy@c");
      NumberUtils.createBigInteger((String) null);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      NumberUtils.min(0L, 0L, (-1719L));
      NumberUtils.isNumber("EJOLD");
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("EJOLD");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"EJOLD\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      NumberUtils.toLong("w]YV?XJ#l&*|k0e?aJ'");
      try { 
        NumberUtils.createNumber("w]YV?XJ#l&*|k0e?aJ'");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // w]YV?XJ#l&*|k0e?aJ' is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      try { 
        NumberUtils.createNumber("w]YV?XJ#l&*|k0e?aJ'");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // w]YV?XJ#l&*|k0e?aJ' is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      NumberUtils.min((short)0, (short)0, (short)0);
      NumberUtils.createDouble((String) null);
      NumberUtils.min((byte)120, (byte)120, (byte) (-40));
      NumberUtils.isDigits("~=EC_LX5HezwsH}");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte) (-40);
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-40);
      byteArray0[4] = (byte) (-40);
      byteArray0[5] = (byte) (-40);
      byte[] byteArray1 = null;
      // Undeclared exception!
      try { 
        NumberUtils.min((byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NumberUtils.toDouble("Bdpqu&.,WbKbg");
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short) (-1831);
      NumberUtils.max(shortArray0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 2376.86558;
      doubleArray0[1] = (double) (short) (-1831);
      doubleArray0[2] = 1102.8395879988598;
      doubleArray0[3] = (double) (short) (-1831);
      doubleArray0[4] = (double) (short) (-1831);
      doubleArray0[5] = (double) (short) (-1831);
      doubleArray0[6] = (double) (short) (-1831);
      NumberUtils.min(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      NumberUtils.isDigits("0");
      NumberUtils.isNumber("0");
      NumberUtils.toFloat("0", 1076.0F);
      // Undeclared exception!
      try { 
        NumberUtils.createDouble("DP");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = " is not a valid number.";
      try { 
        NumberUtils.createNumber(" is not a valid number.");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         //  is not a valid number. is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      NumberUtils.isNumber("0xqUi@OJE:(FdQZ");
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-572.842069037898);
      doubleArray0[1] = 1272.58817244583;
      doubleArray0[2] = 1076.09080559066;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2735.863102445;
      doubleArray0[5] = 1.0;
      NumberUtils.max(doubleArray0);
      NumberUtils.createInteger("7");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)61;
      NumberUtils.max(byteArray0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-997.0F);
      floatArray0[1] = 1.0F;
      floatArray0[2] = 1.0F;
      floatArray0[3] = 1504.9249F;
      float float0 = (-1242.6F);
      floatArray0[4] = (-1242.6F);
      floatArray0[5] = 1.0F;
      floatArray0[6] = 654.967F;
      floatArray0[3] = Float.NaN;
      floatArray0[8] = 1586.3457F;
      NumberUtils.min(floatArray0);
      NumberUtils.min((byte) (-11), (byte) (-11), (byte) (-11));
      try { 
        NumberUtils.createNumber("{d;B+93Y&.k#W'(%~p");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // {d;B+93Y&.k#W'(%~p is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NumberUtils.isDigits("+<'P(gtJ\"X3pzj}");
      try { 
        NumberUtils.createNumber(".?U7Flmv\"CiJp<:OA>");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // .?U7Flmv\"CiJp<:OA> is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      NumberUtils.toByte((String) null, (byte) (-111));
      int[] intArray0 = new int[8];
      intArray0[0] = (int) (byte) (-111);
      intArray0[1] = (int) (byte) (-111);
      intArray0[2] = (int) (byte) (-111);
      intArray0[3] = (int) (byte) (-111);
      intArray0[4] = 70;
      intArray0[5] = (int) (byte) (-111);
      intArray0[6] = (int) (byte) (-111);
      intArray0[7] = (int) (byte) (-111);
      NumberUtils.min(intArray0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = "`TS8";
      try { 
        NumberUtils.createNumber("`TS8");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"`TS8\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      NumberUtils.createNumber((String) null);
      NumberUtils.createBigDecimal((String) null);
      NumberUtils.isNumber((String) null);
      int int0 = (-3462);
      NumberUtils.max((-3462), (-3462), (-3462));
      int[] intArray0 = new int[4];
      intArray0[0] = 1945;
      intArray0[1] = (-3462);
      intArray0[2] = (-3462);
      intArray0[3] = (-3462);
      NumberUtils.max(intArray0);
      String string0 = "=&[P##%=V9/Qf";
      try { 
        NumberUtils.createNumber("=&[P##%=V9/Qf");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // =&[P##%=V9/Qf is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = ">-LLp!orNY}F";
      try { 
        NumberUtils.createNumber(">-LLp!orNY}F");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // >-LLp!orNY}F is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.min((int[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      NumberUtils.toDouble("`");
      float[] floatArray0 = new float[3];
      floatArray0[0] = 69.0F;
      floatArray0[1] = 5252.002F;
      floatArray0[2] = 1417.5537F;
      NumberUtils.min(floatArray0);
      NumberUtils.toInt((String) null);
      NumberUtils.createDouble((String) null);
      NumberUtils.isDigits("e0w8K3%D&3e@TdN{0[E");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      NumberUtils.isNumber("0xqUi@OJE:(FdQZ");
      double[] doubleArray0 = new double[6];
      doubleArray0[5] = 1272.58817244583;
      doubleArray0[2] = 1076.09080559066;
      doubleArray0[3] = (-572.842069037898);
      doubleArray0[4] = 2735.863102445;
      doubleArray0[5] = (-3.7425967685922394);
      NumberUtils.max(doubleArray0);
      NumberUtils.isNumber("---0X6BmFL<%*%YCYDv9|k\"");
      try { 
        NumberUtils.createNumber("0x0X");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"0X\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NumberUtils.createDouble((String) null);
      int[] intArray0 = new int[8];
      intArray0[0] = 57;
      intArray0[1] = 147;
      NumberUtils.min(intArray0);
      try { 
        NumberUtils.createNumber("0x");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      NumberUtils.min(1651.09584747063, 1651.09584747063, 1651.09584747063);
      NumberUtils.min((short)0, (short)0, (short)0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      NumberUtils.min((short)0, (short)0, (short)1);
      NumberUtils.isDigits("");
      NumberUtils numberUtils0 = new NumberUtils();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) (float)numberUtils0.FLOAT_ONE;
      doubleArray0[1] = 1732.202987971306;
      doubleArray0[2] = (double) numberUtils0.DOUBLE_ONE;
      doubleArray0[3] = (double) (long)numberUtils0.LONG_MINUS_ONE;
      NumberUtils.min(doubleArray0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NumberUtils.min(1362.0F, 1362.0F, 1362.0F);
      byte byte0 = (byte)32;
      NumberUtils.toByte("L11", (byte)32);
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        NumberUtils.max((byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = "";
      NumberUtils.toDouble("");
      NumberUtils.max(0.0, 0.0, 0.0);
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        NumberUtils.max((byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)46;
      shortArray0[1] = (short)0;
      NumberUtils.min(shortArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("L");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NumberUtils.toLong("Q?bq1{_Fr|rVIkaSiz", 2487L);
      NumberUtils.toFloat("[2 ~p*i");
      NumberUtils.max(0L, 0L, 2487L);
      NumberUtils.min((-704), (-1), (-1));
      try { 
        NumberUtils.createNumber("The Array must not be null");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // The Array must not be null is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      float[] floatArray0 = new float[6];
      floatArray0[0] = (-674.0F);
      floatArray0[1] = (-1.0F);
      floatArray0[2] = (-1724.422F);
      floatArray0[3] = (-1.0F);
      floatArray0[4] = (-3008.0334F);
      floatArray0[5] = (-2815.36F);
      NumberUtils.max(floatArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createFloat("0x");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      NumberUtils.max(0L, 0L, (-1551L));
      NumberUtils.max(0, 0, 0);
      NumberUtils.toLong("The Array must not be null", (long) 0);
      NumberUtils.min((byte)0, (byte)0, (byte)0);
      NumberUtils.toByte("", (byte)0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)70;
      shortArray0[1] = (short)45;
      NumberUtils.min(shortArray0);
      NumberUtils.toFloat("jK;}ZtY[", (-531.02454F));
      NumberUtils.toLong("jK;}ZtY[", 0L);
      NumberUtils.toInt("jK;}ZtY[", (int) (short)45);
      float[] floatArray0 = null;
      // Undeclared exception!
      try { 
        NumberUtils.min((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      NumberUtils.min((byte) (-1), (byte) (-1), (byte)0);
      NumberUtils.toInt(" r4v", (int) (byte) (-1));
      String string0 = "w^'ym.rO,p";
      NumberUtils.toLong("w^'ym.rO,p", 1178L);
      byte byte0 = (byte)63;
      NumberUtils.toByte("w^'ym.rO,p", (byte)63);
      String string1 = null;
      NumberUtils.toDouble((String) null, 1127.59392466);
      NumberUtils.min(1524L, (long) (byte) (-1), 573L);
      NumberUtils.min(1986L, (long) (byte)0, 605L);
      // Undeclared exception!
      try { 
        NumberUtils.max((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      NumberUtils.max((byte) (-72), (byte) (-72), (byte) (-72));
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)0;
      NumberUtils.max(byteArray0);
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short) (byte)0;
      shortArray0[1] = (short) (byte)0;
      NumberUtils.max(shortArray0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      NumberUtils.toShort("", (short)477);
      NumberUtils.toInt((String) null, (int) (short)477);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[0] = (-1L);
      longArray0[1] = 0L;
      longArray0[2] = 0L;
      longArray0[3] = (-137L);
      longArray0[4] = (-833L);
      NumberUtils.min(longArray0);
      NumberUtils.min(longArray0);
      NumberUtils.min((short) (-798), (short) (-1), (short)1668);
      NumberUtils.toDouble("", (double) 0L);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (short) (-798);
      doubleArray0[1] = (double) (-833L);
      doubleArray0[2] = (double) (-833L);
      NumberUtils.max(doubleArray0);
      NumberUtils.max((int) (short) (-798), (-1), (int) (short) (-798));
      NumberUtils.min((double) 0L, 0.0, (double) (-833L));
      NumberUtils.min((float) (short) (-1), 396.31714F, (float) 0L);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      NumberUtils.isNumber((String) null);
      NumberUtils.max(544, 1089, (-271));
      NumberUtils.toInt((String) null);
      NumberUtils.toDouble("", 0.0);
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("W%,!V$[uq0@r");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NumberUtils.toByte("9UX:;jJNVkmHs,+r");
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.max((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 1023;
      intArray0[1] = 640;
      intArray0[2] = 395;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 2614;
      intArray0[6] = 0;
      intArray0[7] = (-1233);
      intArray0[8] = 0;
      NumberUtils.max(intArray0);
      NumberUtils.min(1579.0F, Float.NaN, (float) 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) Float.NaN;
      doubleArray0[2] = (double) 395;
      doubleArray0[3] = (double) Float.NaN;
      doubleArray0[4] = (double) 1023;
      doubleArray0[5] = (double) 1023;
      doubleArray0[6] = (double) 0;
      NumberUtils.max(doubleArray0);
      NumberUtils.max((long) 395, (-324L), (-889L));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      NumberUtils.toDouble("-0X");
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-1566);
      NumberUtils.min(intArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "O";
      NumberUtils.isNumber("O");
      // Undeclared exception!
      try { 
        NumberUtils.min((long[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      NumberUtils.max((-284.648815), (-284.648815), (-284.648815));
      // Undeclared exception!
      try { 
        NumberUtils.min((short[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NumberUtils.min((short)1784, (short)179, (short)1784);
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short)179;
      shortArray0[1] = (short)179;
      shortArray0[2] = (short)179;
      NumberUtils.max(shortArray0);
      NumberUtils.isDigits("O_&U`Co8Q~#+S7%X");
      NumberUtils.toDouble("", (double) (short)179);
      long[] longArray0 = new long[4];
      longArray0[0] = (long) (short)1784;
      longArray0[1] = (long) (short)179;
      longArray0[2] = (long) (short)1784;
      longArray0[3] = (long) (short)1784;
      NumberUtils.min(longArray0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) (short)179;
      floatArray0[1] = Float.NaN;
      NumberUtils.max(floatArray0);
      NumberUtils.min((byte) (-1), (byte)65, (byte)60);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      NumberUtils.max(817.51F, 0.0F, 0.0F);
      NumberUtils.max(686, (-5004), 2379);
      NumberUtils.isNumber("z\"UR");
      NumberUtils.toByte("z\"UR", (byte) (-124));
      NumberUtils.toShort("z\"UR", (short) (byte) (-124));
      NumberUtils.max(555.07982202, (-404.43196456), (-404.43196456));
      NumberUtils.toLong((String) null, (long) 2379);
      NumberUtils.max(1L, 1563L, (-1L));
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      NumberUtils.min((-926.0152F), 3450.5425F, 1.0F);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) (-926.0152F);
      doubleArray0[1] = (double) 3450.5425F;
      doubleArray0[2] = (double) (-926.0152F);
      doubleArray0[3] = (double) 3450.5425F;
      doubleArray0[4] = (double) 3450.5425F;
      doubleArray0[5] = (double) (-926.0152F);
      NumberUtils.max(doubleArray0);
      NumberUtils.min(3450.54248046875, (double) (-926.0152F), (-1.0));
      NumberUtils.max(1256, 1256, 0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      NumberUtils.min((short)0, (short)2028, (short)0);
      // Undeclared exception!
      try { 
        NumberUtils.max((int[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = "";
      NumberUtils.isDigits("");
      int[] intArray0 = new int[4];
      intArray0[0] = (-3209);
      intArray0[1] = 0;
      intArray0[2] = 382;
      intArray0[3] = 2769;
      NumberUtils.max(intArray0);
      NumberUtils.min((long) 2769, 1602L, (long) 382);
      NumberUtils.min((double) 1602L, (double) 0, (double) 382L);
      short[] shortArray0 = new short[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      NumberUtils.createInteger((String) null);
      NumberUtils.createBigDecimal((String) null);
      NumberUtils.max((short)1383, (short)1230, (short) (-1708));
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (short) (-1708);
      NumberUtils.min(floatArray0);
      NumberUtils.createDouble((String) null);
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (short)1230;
      intArray0[1] = (int) (short)1230;
      intArray0[2] = (int) (short)1230;
      NumberUtils.min(intArray0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NumberUtils.max((byte)1, (byte)1, (byte)100);
      NumberUtils.min((-1523L), (long) (byte)1, (-1523L));
      NumberUtils.max(57, (int) (byte)100, 1931);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      NumberUtils.min((short)2204, (short)2204, (short) (-293));
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) (short)2204;
      floatArray0[1] = (float) (short)2204;
      floatArray0[2] = 0.0F;
      floatArray0[3] = (float) (short) (-293);
      floatArray0[4] = (float) (short)2204;
      floatArray0[5] = (float) (short)2204;
      floatArray0[6] = (float) (short) (-293);
      floatArray0[7] = (float) (short) (-293);
      floatArray0[8] = (float) (short) (-293);
      NumberUtils.min(floatArray0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      long long0 = 125L;
      long long1 = (-1480L);
      NumberUtils.min(125L, 0L, (-1480L));
      NumberUtils.toShort("");
      // Undeclared exception!
      try { 
        NumberUtils.createLong("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      NumberUtils.max((short) (-1499), (short) (-1499), (short) (-95));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte) (-85);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)71;
      byteArray0[5] = (byte) (-45);
      byteArray0[6] = (byte)108;
      byteArray0[7] = (byte)109;
      byteArray0[8] = (byte) (-102);
      NumberUtils.min(byteArray0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NumberUtils.max((byte)0, (byte) (-39), (byte) (-39));
      NumberUtils.toByte("");
      NumberUtils.max(0.0F, (float) (byte) (-39), (float) (byte) (-39));
      NumberUtils.min(0.0, (-855.75377), (double) (byte)0);
      NumberUtils.toFloat("");
      NumberUtils.toInt("", (-19));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-39);
      byteArray0[7] = (byte) (-39);
      NumberUtils.min(byteArray0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-54);
      byteArray0[0] = (byte) (-54);
      NumberUtils.max(byteArray0);
      short[] shortArray0 = new short[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NumberUtils.max((byte)48, (byte)25, (byte) (-90));
      NumberUtils.max(0, 0, 0);
      NumberUtils.toDouble("A blank string is not a valid number");
      long[] longArray0 = new long[3];
      longArray0[0] = (long) (byte) (-90);
      longArray0[1] = (-791L);
      longArray0[2] = (long) (byte) (-90);
      NumberUtils.max(longArray0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NumberUtils.max(0.0, 0.0, 0.0);
      NumberUtils.min(1783.7163F, 0.0F, 1783.7163F);
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("org.apache.commons.lang3.math.NumberUtils");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (byte)numberUtils0.BYTE_ONE;
      doubleArray0[1] = (double) (float)numberUtils0.FLOAT_ZERO;
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) numberUtils0.FLOAT_ZERO;
      floatArray0[1] = (float) (long)numberUtils0.LONG_MINUS_ONE;
      NumberUtils.max(floatArray0);
      NumberUtils.min(doubleArray0);
      NumberUtils.toDouble("=k+46I", (double) numberUtils0.FLOAT_MINUS_ONE);
      NumberUtils.toInt("=k+46I");
      NumberUtils.max((double) numberUtils0.DOUBLE_ONE, (double) (-1.0F), (double) numberUtils0.FLOAT_ONE);
      NumberUtils.max((byte) numberUtils0.BYTE_MINUS_ONE, (byte)117, (byte) numberUtils0.BYTE_MINUS_ONE);
      NumberUtils.min((long) numberUtils0.SHORT_ONE, (-1L), (-1L));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      short short0 = (short)0;
      NumberUtils.max((short)0, (short)0, (short)0);
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NumberUtils.isNumber("--");
      NumberUtils.toByte("--", (byte)120);
      NumberUtils.toFloat("");
      int[] intArray0 = new int[4];
      intArray0[0] = (int) (byte)120;
      intArray0[1] = (int) (byte)120;
      intArray0[2] = (int) (byte)120;
      intArray0[3] = (int) (byte)120;
      NumberUtils.max(intArray0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 120;
      doubleArray0[1] = (double) 120;
      doubleArray0[2] = (double) 0.0F;
      doubleArray0[3] = (double) (byte)120;
      doubleArray0[4] = (double) 120;
      doubleArray0[5] = (double) 0.0F;
      NumberUtils.max(doubleArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      NumberUtils.isNumber("zqe");
      NumberUtils.isNumber(".");
      NumberUtils.toDouble(".");
      NumberUtils.toShort(".");
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("fH");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NumberUtils.toLong((String) null);
      long[] longArray0 = new long[2];
      longArray0[0] = 0L;
      longArray0[1] = 0L;
      NumberUtils.max(longArray0);
      NumberUtils.createFloat((String) null);
      NumberUtils.toByte("0");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("pCIJX");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"pCIJX\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "/qG]yUM?xOE[";
      NumberUtils.toLong("/qG]yUM?xOE[", 0L);
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)8;
      shortArray0[1] = (short)1111;
      NumberUtils.max(shortArray0);
      byte byte0 = (byte) (-1);
      NumberUtils.min((byte) (-1), (byte) (-1), (byte) (-1));
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) (byte) (-1);
      doubleArray0[1] = (double) (byte) (-1);
      doubleArray0[2] = (double) (byte) (-1);
      doubleArray0[3] = 170.46936463;
      doubleArray0[4] = (double) (short)8;
      NumberUtils.min(doubleArray0);
      long[] longArray0 = null;
      // Undeclared exception!
      try { 
        NumberUtils.max((long[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      NumberUtils.max((short) (-4079), (short) (-66), (short)57);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NumberUtils.max(0.0, 637.5102973797586, (-5782.9375));
      NumberUtils.createLong((String) null);
      NumberUtils.max(1155.7772F, (-1846.3F), 0.0F);
      NumberUtils.toShort((String) null, (short) (-355));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-67);
      byteArray0[1] = (byte) (-26);
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      NumberUtils.min(byteArray0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      NumberUtils.toInt("77?x(|52", (-1));
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-2792);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      intArray0[8] = (-1);
      NumberUtils.max(intArray0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NumberUtils.toInt("77?x(|52", (-1));
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-2792);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      NumberUtils.max(intArray0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      NumberUtils.toInt("", 0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      NumberUtils.min(floatArray0);
      NumberUtils.min((short)593, (short) (-688), (short) (-688));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)61;
      NumberUtils.min(byteArray0);
      NumberUtils.max(floatArray0);
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)120;
      shortArray0[1] = (short) (byte)0;
      shortArray0[2] = (short)0;
      shortArray0[3] = (short) (byte)0;
      NumberUtils.max(shortArray0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (short)0;
      doubleArray0[1] = (double) 0.0F;
      NumberUtils.max(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NumberUtils.max((byte)1, (byte)40, (byte)40);
      int[] intArray0 = new int[7];
      intArray0[0] = (int) (byte)40;
      intArray0[1] = (int) (byte)1;
      intArray0[2] = (int) (byte)1;
      intArray0[3] = (int) (byte)1;
      intArray0[4] = (int) (byte)40;
      intArray0[5] = 0;
      intArray0[6] = (int) (byte)40;
      NumberUtils.min(intArray0);
      NumberUtils.toLong("R :CIKMhV0");
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 0L;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 40;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (float) 40;
      NumberUtils.min(floatArray0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-52);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)8;
      NumberUtils.min(byteArray0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NumberUtils.max(0, 0, 0);
      byte byte0 = (byte)123;
      NumberUtils.min((byte)123, (byte)44, (byte)44);
      String string0 = ".i7SJF";
      short short0 = (short) (-326);
      NumberUtils.toShort(".i7SJF", (short) (-326));
      NumberUtils.toByte(".i7SJF");
      // Undeclared exception!
      try { 
        NumberUtils.max((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      NumberUtils.max(2895L, 2895L, (-1956L));
      NumberUtils.toLong((String) null);
      NumberUtils.isNumber((String) null);
      NumberUtils.max((-1), (-1), (-1));
      NumberUtils.max((-1573.937F), (float) 0L, (float) 2895L);
      NumberUtils.toFloat("L*");
      NumberUtils.toLong("L*");
      NumberUtils.toInt("L*");
      NumberUtils.min((short) (-1235), (short) (-3120), (short) (-3120));
      NumberUtils.toShort((String) null);
      NumberUtils numberUtils0 = new NumberUtils();
      NumberUtils.isDigits((String) null);
      NumberUtils.min((byte)45, (byte)1, (byte) numberUtils0.BYTE_MINUS_ONE);
      try { 
        NumberUtils.createNumber("`kNK");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // `kNK is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-1370.1095);
      doubleArray0[1] = 1345.2;
      doubleArray0[3] = 1345.2;
      NumberUtils.max(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1.0;
      NumberUtils.max(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NumberUtils.toFloat("");
      NumberUtils.toInt((String) null, 76);
      NumberUtils.toDouble((String) null);
      NumberUtils.toShort((String) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-86);
      NumberUtils.max(byteArray0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "";
      try { 
        NumberUtils.createNumber("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      NumberUtils.min((byte)64, (byte)57, (byte)0);
      // Undeclared exception!
      try { 
        NumberUtils.max((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NumberUtils.toFloat((String) null, 1.0F);
      float[] floatArray0 = new float[6];
      floatArray0[0] = 1.0F;
      floatArray0[1] = 1.0F;
      floatArray0[2] = 1.0F;
      floatArray0[3] = 1.0F;
      floatArray0[4] = 1.0F;
      floatArray0[5] = 1.0F;
      NumberUtils.max(floatArray0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 1.0F;
      doubleArray0[1] = (double) 1.0F;
      doubleArray0[2] = Double.NaN;
      doubleArray0[3] = Double.NaN;
      doubleArray0[4] = (double) 1.0F;
      doubleArray0[5] = (double) 1.0F;
      NumberUtils.min(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NumberUtils.toLong("<x`xNY", (-1L));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      NumberUtils.max((-1.0F), (-1.0F), (-1.0F));
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-1.0F);
      floatArray0[1] = (-1.0F);
      floatArray0[2] = (-1.0F);
      floatArray0[3] = (-1.0F);
      floatArray0[4] = (-1.0F);
      floatArray0[5] = (-1.0F);
      floatArray0[6] = (-1.0F);
      floatArray0[7] = (-1.0F);
      floatArray0[8] = (-1.0F);
      NumberUtils.min(floatArray0);
      NumberUtils.toByte("", (byte)46);
      long[] longArray0 = new long[4];
      longArray0[0] = (long) (byte)46;
      longArray0[1] = (long) (byte)46;
      longArray0[2] = 0L;
      longArray0[3] = (long) (byte)46;
      NumberUtils.min(longArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("r9p^'929)V4h%");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      NumberUtils.toByte("3(P<QPsm(_GN.V$4");
      byte byte0 = (byte)0;
      NumberUtils.min((byte)0, (byte)0, (byte)0);
      int int0 = 0;
      NumberUtils.toInt("3(P<QPsm(_GN.V$4", 0);
      NumberUtils.toByte("3(P<QPsm(_GN.V$4");
      NumberUtils.max((-1051), (int) (byte)0, 45);
      float float0 = 0.0F;
      NumberUtils.min(324.24F, (float) (byte)0, 0.0F);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = Double.NaN;
      doubleArray0[2] = (-1679.662);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2202.63;
      doubleArray0[5] = (-281.42);
      NumberUtils.min(doubleArray0);
      NumberUtils.min((-1278.7592F), 0.0F, (-1278.7592F));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      NumberUtils.toFloat((String) null);
      short[] shortArray0 = new short[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      NumberUtils.isDigits((String) null);
      long[] longArray0 = new long[4];
      longArray0[0] = 1757L;
      longArray0[1] = 577L;
      longArray0[2] = (-1462L);
      longArray0[3] = 0L;
      NumberUtils.min(longArray0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      NumberUtils.max(1.0F, Float.NaN, 1.0F);
      long[] longArray0 = new long[1];
      longArray0[0] = (-98L);
      NumberUtils.min(longArray0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      NumberUtils.toByte("0X", (byte)67);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)67;
      NumberUtils.min(byteArray0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 148;
      NumberUtils.min(148, 0, 148);
      String string0 = "2%tI2#Z3E]_.C4D78a";
      NumberUtils.isDigits("2%tI2#Z3E]_.C4D78a");
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      short short0 = (short)0;
      NumberUtils.toShort("A<#|f", (short)0);
      NumberUtils.toLong("A<#|f");
      NumberUtils.min((long) (short)0, (-2322L), 2162L);
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("IWUC5");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"IWUC5\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short) (-199);
      shortArray0[1] = (short) (-4037);
      shortArray0[2] = (short)863;
      shortArray0[3] = (short)656;
      shortArray0[4] = (short) (-17785);
      NumberUtils.max(shortArray0);
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (short)863;
      intArray0[1] = (int) (short)863;
      NumberUtils.min(intArray0);
      NumberUtils.createBigDecimal("-0");
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NumberUtils.max((-1L), (-1L), (-1L));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = 1096;
      NumberUtils.min(639, 1096, 639);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NumberUtils.toByte("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      NumberUtils.max(byteArray0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = "-0X";
      try { 
        NumberUtils.createNumber("-0X");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      long long0 = 0L;
      NumberUtils.min(0L, 0L, 1269L);
      NumberUtils.isNumber("b!|dcog");
      NumberUtils.toLong("b!|dcog", 0L);
      NumberUtils.max(0L, (-1137L), 9L);
      // Undeclared exception!
      try { 
        NumberUtils.min((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      NumberUtils.min((short)108, (short)108, (short)108);
      int[] intArray0 = new int[4];
      intArray0[0] = (int) (short)108;
      intArray0[1] = (int) (short)108;
      intArray0[2] = (int) (short)108;
      intArray0[3] = (int) (short)108;
      intArray0[1] = (int) (short)108;
      NumberUtils.max(intArray0);
      NumberUtils.min(intArray0);
      try { 
        NumberUtils.createNumber("-0X---");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Sign character in wrong position
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      try { 
        NumberUtils.createNumber("-0xw]YV?XJ#l&*|k0e?aJ'");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-w]YV?XJ#l&*|k0e?aJ'\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NumberUtils.toFloat("");
      NumberUtils.min(567L, (-12L), (-12L));
      NumberUtils.isDigits("");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      NumberUtils.min(0L, 0L, 0L);
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      NumberUtils.isDigits("0");
      NumberUtils.toFloat("0", 1076.0F);
      NumberUtils.createInteger("0");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NumberUtils.createNumber((String) null);
      NumberUtils.toByte((String) null);
      NumberUtils.createLong((String) null);
      long[] longArray0 = new long[9];
      longArray0[6] = (long) (byte)0;
      longArray0[7] = (long) (byte)0;
      NumberUtils.max(longArray0);
      NumberUtils.isNumber("0X");
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) (byte)0;
      doubleArray0[2] = (double) 0L;
      doubleArray0[4] = (double) 0L;
      doubleArray0[5] = (double) 0L;
      doubleArray0[7] = (double) 0L;
      doubleArray0[8] = (-2959.780404);
      NumberUtils.min(doubleArray0);
      NumberUtils.toDouble("/c");
      NumberUtils.isDigits("0X");
      NumberUtils.toInt("-1");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 32;
      intArray0[1] = (-1231);
      intArray0[2] = 832;
      intArray0[3] = 68;
      NumberUtils.max(intArray0);
      NumberUtils.toLong("5");
      NumberUtils.isNumber("-0x:aQ5C");
      NumberUtils.max(intArray0);
      NumberUtils.toFloat("pkY9@+t2}/ow4Bh");
      float[] floatArray0 = new float[3];
      floatArray0[0] = (-832.8944F);
      floatArray0[1] = (float) 5L;
      floatArray0[2] = (float) 832;
      NumberUtils.max(floatArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createFloat("-0x:aQ5C");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      float[] floatArray0 = new float[5];
      floatArray0[0] = (-387.2784F);
      floatArray0[1] = 271.4187F;
      floatArray0[2] = (-4066.772F);
      floatArray0[3] = 1.0F;
      floatArray0[4] = 0.0F;
      NumberUtils.max(floatArray0);
      NumberUtils.min(0.0F, 645.99F, 271.4187F);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 271.4187F;
      doubleArray0[1] = (-1202.92496144487);
      doubleArray0[2] = (double) 0.0F;
      doubleArray0[3] = (double) (-4066.772F);
      doubleArray0[4] = (double) (-387.2784F);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 271.4187F;
      NumberUtils.min(doubleArray0);
      NumberUtils.toLong("-0XThe Array must not be null");
      NumberUtils.isNumber("---0XrBmFL<%*%YC0Dv|k\"");
      NumberUtils.toShort("-0XThe Array must not be null");
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("---0XrBmFL<%*%YC0Dv|k\"");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // ---0XrBmFL<%*%YC0Dv|k\" is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      NumberUtils.toLong("0x.?U7Flmv\"CiJp<:OA>");
      String string0 = "-0xA blank string is not a valid number";
      NumberUtils.isNumber("-0xA blank string is not a valid number");
      NumberUtils.isNumber("0x");
      NumberUtils.toInt("0x.?U7Flmv\"CiJp<:OA>");
      // Undeclared exception!
      try { 
        NumberUtils.createLong("0x.?U7Flmv\"CiJp<:OA>");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \".?U7Flmv\"CiJp<:OA>\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      float[] floatArray0 = new float[3];
      floatArray0[0] = (-2236.9558F);
      floatArray0[1] = 0.0F;
      floatArray0[2] = 1.0F;
      NumberUtils.max(floatArray0);
      NumberUtils.toFloat(" vs ");
      NumberUtils.isNumber("0XM$5h");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      NumberUtils.toDouble("");
      // Undeclared exception!
      try { 
        NumberUtils.max((short[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      NumberUtils.toInt("-1k1");
      NumberUtils.max((byte)0, (byte) (-126), (byte)0);
      NumberUtils.min((int) (byte)0, (int) (byte) (-126), (-1679));
      NumberUtils.toByte("rkW(Yh5|\"PI%WS");
      NumberUtils.toByte("rkW(Yh5|\"PI%WS");
      NumberUtils.createFloat("-0");
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) (-1679);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = (double) (-1679);
      doubleArray0[4] = 2469.0;
      NumberUtils.min(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NumberUtils.max((-1), (-1), (-1));
      NumberUtils.max((short)2469, (short) (-4477), (short)1630);
      NumberUtils.toByte("", (byte) (-30));
      NumberUtils.toInt("1");
      long[] longArray0 = new long[5];
      longArray0[0] = (long) (-1);
      longArray0[1] = (long) (short)2469;
      longArray0[2] = (long) (short)1630;
      longArray0[3] = (long) (byte) (-30);
      longArray0[0] = (long) (-1);
      Long long0 = new Long(1630L);
      NumberUtils.max(longArray0);
      NumberUtils.min((byte) (-30), (byte) (-30), (byte)7);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 2469L;
      floatArray0[1] = (float) (short)1630;
      floatArray0[2] = (float) (byte) (-30);
      longArray0[2] = (-1L);
      floatArray0[4] = (float) (byte) (-30);
      floatArray0[1] = (float) (short)2469;
      NumberUtils.min(floatArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)7;
      NumberUtils.max(byteArray0);
      NumberUtils.toFloat("V7DAwQ,g_ f5]R~[O");
      NumberUtils.toFloat("1");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      NumberUtils.toInt("11");
      NumberUtils.max((byte) (-19), (byte) (-126), (byte) (-19));
      NumberUtils.min((int) (byte) (-19), (int) (byte) (-126), (-1702));
      NumberUtils.toByte("rkW(Yh5|\"PI%WS");
      int[] intArray0 = new int[8];
      intArray0[0] = (-1702);
      intArray0[1] = (int) (byte) (-126);
      intArray0[2] = (-1702);
      intArray0[3] = (-1702);
      intArray0[4] = (int) (byte)0;
      intArray0[5] = (-2093796555);
      intArray0[6] = (int) (byte) (-19);
      intArray0[7] = (int) (byte) (-19);
      NumberUtils.max(intArray0);
      NumberUtils.isDigits("--");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      NumberUtils.max((short)2196, (short)2196, (short)1);
      NumberUtils.isNumber("+WX3^rj@dW%X");
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) (short)2196;
      doubleArray0[1] = (double) (short)2196;
      doubleArray0[2] = (double) (short)1;
      doubleArray0[3] = (double) (short)2196;
      NumberUtils.min(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      NumberUtils.max(3020, 3020, 3020);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      NumberUtils.min((byte) (-127), (byte)120, (byte)120);
      NumberUtils.createBigDecimal((String) null);
      NumberUtils.createBigInteger((String) null);
      NumberUtils.max(Double.NaN, 0.0, (double) (byte) (-127));
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[0] = 1L;
      longArray0[1] = 110L;
      longArray0[2] = 2695L;
      longArray0[3] = (-390L);
      NumberUtils.max(longArray0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      float[] floatArray0 = new float[6];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (-1.0F);
      floatArray0[3] = (-2632.0F);
      floatArray0[4] = 1.0F;
      floatArray0[5] = 0.0F;
      NumberUtils.min(floatArray0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NumberUtils.toInt("11");
      byte byte0 = (byte) (-126);
      NumberUtils.max((byte) (-19), (byte) (-126), (byte) (-19));
      NumberUtils.min((int) (byte) (-19), (int) (byte) (-126), (-1702));
      NumberUtils.toByte("rkW(Yh5|\"PI%WS");
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("rkW(Yh5|\"PI%WS");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"rkW(Yh5|\"PI%WS\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      NumberUtils.min((-2762), (-2762), 0);
      NumberUtils.max((-159L), 923L, 923L);
      // Undeclared exception!
      try { 
        NumberUtils.createLong("^yjvxxNl");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"^yjvxxNl\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      NumberUtils.max((short)57, (short)0, (short) (-4199));
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      NumberUtils.max(918.0, 918.0, 918.0);
      long[] longArray0 = new long[2];
      longArray0[0] = 2624L;
      longArray0[1] = 4242L;
      NumberUtils.max(longArray0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      float[] floatArray0 = new float[5];
      floatArray0[0] = (-1.0F);
      floatArray0[1] = (-2870.561F);
      floatArray0[2] = 2473.8105F;
      floatArray0[3] = (-1846.26F);
      floatArray0[4] = 0.0F;
      NumberUtils.min(floatArray0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      long[] longArray0 = new long[5];
      NumberUtils.max(longArray0);
      NumberUtils.toFloat("]#c-umD");
      String string0 = "0X-0XMinimum abbreviation width with offset is 7";
      NumberUtils.toLong("0X-0XMinimum abbreviation width with offset is 7");
      try { 
        NumberUtils.createNumber("]#c-umD");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // ]#c-umD is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = "";
      NumberUtils.toLong("");
      NumberUtils.isDigits("");
      // Undeclared exception!
      try { 
        NumberUtils.min((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[0] = 2004.5859F;
      floatArray0[1] = Float.NaN;
      floatArray0[2] = 827.0391F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (-116.0F);
      floatArray0[5] = 0.0F;
      floatArray0[6] = 44.86434F;
      floatArray0[7] = 1.0F;
      NumberUtils.max(floatArray0);
      NumberUtils.createBigDecimal((String) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 507;
      intArray0[1] = (-22583480);
      intArray0[2] = 29;
      intArray0[3] = Integer.MAX_VALUE;
      intArray0[4] = 2144899385;
      intArray0[5] = 45;
      NumberUtils.max(intArray0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-997.0F);
      floatArray0[1] = 1.0F;
      floatArray0[2] = 1.0F;
      floatArray0[3] = 1505.3004F;
      floatArray0[4] = (-1242.6F);
      floatArray0[5] = 1.0F;
      floatArray0[6] = 654.967F;
      floatArray0[3] = Float.NaN;
      floatArray0[8] = 1586.3457F;
      NumberUtils.min(floatArray0);
      NumberUtils.min((byte) (-11), (byte) (-11), (byte) (-11));
      try { 
        NumberUtils.createNumber("{d;B+93Y&.k#W'(%~p");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // {d;B+93Y&.k#W'(%~p is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.max((short[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 1023;
      intArray0[2] = 395;
      intArray0[3] = 0;
      intArray0[4] = 1023;
      intArray0[5] = 2614;
      intArray0[6] = 1023;
      intArray0[7] = (-1233);
      intArray0[8] = 0;
      NumberUtils.max(intArray0);
      NumberUtils.min(1579.0F, Float.NaN, (float) 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) Float.NaN;
      doubleArray0[2] = (double) 395;
      doubleArray0[3] = (double) Float.NaN;
      doubleArray0[4] = (double) 1023;
      doubleArray0[5] = (double) 1023;
      doubleArray0[6] = (double) 0;
      NumberUtils.max(doubleArray0);
      NumberUtils.max((long) 395, (long) (-1233), (-889L));
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("V\"}vT$");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      NumberUtils.createBigDecimal((String) null);
      NumberUtils.toShort("D");
      String string0 = "Strings must not be null";
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("Strings must not be null");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"String\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      NumberUtils.min(0L, 0L, (-1719L));
      NumberUtils.isNumber("EJOLD");
      Integer integer0 = NumberUtils.INTEGER_MINUS_ONE;
      NumberUtils.toFloat("EJOLD");
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short)5294;
      shortArray0[1] = (short)45;
      shortArray0[1] = (short)45;
      NumberUtils.max(shortArray0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) (short)45;
      floatArray0[1] = (float) (short) (-154);
      NumberUtils.max(floatArray0);
      long[] longArray0 = new long[9];
      longArray0[0] = (long) (short)5294;
      longArray0[1] = (long) (short) (-154);
      longArray0[2] = (long) (short)45;
      longArray0[3] = (long) (short)5294;
      longArray0[4] = (-1719L);
      longArray0[5] = (-1719L);
      longArray0[6] = (-1719L);
      longArray0[7] = (long) (short)5294;
      longArray0[8] = (-2497L);
      NumberUtils.min(longArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createLong("0x");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      NumberUtils.isDigits("-");
      NumberUtils.isNumber("-");
      short[] shortArray0 = new short[8];
      shortArray0[0] = (short)2;
      shortArray0[1] = (short) (-2458);
      shortArray0[2] = (short)3222;
      shortArray0[3] = (short)0;
      shortArray0[4] = (short)0;
      shortArray0[5] = (short)120;
      shortArray0[6] = (short) (-13);
      shortArray0[7] = (short)0;
      NumberUtils.max(shortArray0);
      NumberUtils.min(0.0F, (float) (short)0, (float) (short)3222);
      NumberUtils.toFloat("-", 1076.0F);
      // Undeclared exception!
      try { 
        NumberUtils.createDouble("DP");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      NumberUtils.min(0L, 0L, (-1719L));
      String string0 = "EJOLD";
      NumberUtils.isNumber("EJOLD");
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("EJOLD");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"EJOLD\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)19;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)0;
      NumberUtils.max(byteArray0);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)27;
      intArray0[1] = (int) (byte)63;
      intArray0[2] = (int) (byte)63;
      intArray0[3] = (int) (byte)19;
      intArray0[4] = (int) (byte)0;
      NumberUtils.max(intArray0);
      Integer integer0 = NumberUtils.INTEGER_MINUS_ONE;
      NumberUtils.toFloat("");
      NumberUtils.max((float) (byte)0, (float) 63, 0.0F);
      NumberUtils.max((-1.0), (double) (byte)63, (double) 0.0F);
      NumberUtils.toFloat("");
      NumberUtils.toFloat("", (float) (byte)27);
      NumberUtils.max(0, 19, (-292));
      NumberUtils.max((int) (byte)0, (int) (byte)0, (int) (byte)63);
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short) (byte)63;
      shortArray0[1] = (short) (byte)27;
      shortArray0[2] = (short) (byte)27;
      NumberUtils.min(shortArray0);
      NumberUtils.min(shortArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      NumberUtils.toInt((String) null);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 0;
      floatArray0[2] = (float) 0;
      floatArray0[4] = 1504.9249F;
      floatArray0[5] = 2334.91F;
      floatArray0[6] = 801.24146F;
      NumberUtils.min(floatArray0);
      NumberUtils.max(floatArray0);
      NumberUtils.toByte(" vs ");
      NumberUtils.toByte("0x");
      NumberUtils.isNumber("Aborting to protect against StackOverflowError - output of one loop is the input of another");
      NumberUtils.isDigits("0x");
      long[] longArray0 = new long[3];
      longArray0[0] = (long) (byte)0;
      floatArray0[5] = (float) 1L;
      longArray0[2] = (long) (byte)0;
      NumberUtils.max(longArray0);
      NumberUtils.toDouble("b0t;u}4\",_[_\"j#m>");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-23);
      byteArray0[8] = (byte)0;
      NumberUtils.min(byteArray0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      NumberUtils.toInt("-1k1");
      byte byte0 = (byte) (-112);
      NumberUtils.max((byte) (-112), (byte) (-19), (byte) (-19));
      NumberUtils.min((int) (byte) (-19), (int) (byte) (-112), (-1702));
      NumberUtils.toByte("rkW(Yh5|\"PI%WS");
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("rkW(Yh5|\"PI%WS");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"rkW(Yh5|\"PI%WS\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte byte0 = (byte)72;
      byte byte1 = (byte)0;
      byte byte2 = (byte) (-72);
      NumberUtils.max((byte)72, (byte)0, (byte) (-72));
      NumberUtils.toLong("r$dHMK*796thtgr");
      NumberUtils.toInt("r$dHMK*796thtgr");
      NumberUtils.isDigits("r$dHMK*796thtgr");
      NumberUtils.toShort("r$dHMK*796thtgr");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte) (-72);
      byteArray0[4] = (byte) (-72);
      NumberUtils.max(byteArray0);
      String string0 = "";
      // Undeclared exception!
      try { 
        NumberUtils.createFloat("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      NumberUtils.min((short)108, (short)108, (short)108);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (short)108;
      intArray0[1] = (int) (short)108;
      intArray0[2] = (int) (short)108;
      intArray0[3] = (int) (short)108;
      intArray0[1] = (int) (short)108;
      NumberUtils.max(intArray0);
      NumberUtils.min(intArray0);
      try { 
        NumberUtils.createNumber("Minimum abbreviation width with offset is 7");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NumberUtils.toLong("w]YV?XJ#l&*|k.e?aJ'");
      try { 
        NumberUtils.createNumber("w]YV?XJ#l&*|k.e?aJ'");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // w]YV?XJ#l&*|k.e?aJ' is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      float[] floatArray0 = new float[5];
      floatArray0[0] = (-387.2784F);
      floatArray0[1] = 271.4187F;
      floatArray0[2] = (-4066.772F);
      floatArray0[3] = 1.0F;
      floatArray0[4] = 0.0F;
      NumberUtils.max(floatArray0);
      NumberUtils.min(0.0F, 645.99F, 271.4187F);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 271.4187F;
      doubleArray0[1] = (-1202.92496144487);
      doubleArray0[3] = (double) (-4066.772F);
      doubleArray0[4] = (double) (-387.2784F);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 271.4187F;
      NumberUtils.min(doubleArray0);
      NumberUtils.toLong("-0XThe Array must not be null");
      NumberUtils.isNumber("---0XrBmFL<%*%YC0Dv|k\"");
      NumberUtils.toShort("-0XThe Array must not be null");
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      float[] floatArray0 = new float[5];
      floatArray0[0] = (-387.2784F);
      floatArray0[1] = 271.4187F;
      floatArray0[2] = (-4066.772F);
      floatArray0[3] = 1.0F;
      floatArray0[4] = 0.0F;
      NumberUtils.max(floatArray0);
      NumberUtils.min(0.0F, 645.99F, 271.4187F);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 271.4187F;
      doubleArray0[1] = (-1202.92496144487);
      doubleArray0[3] = (double) (-4066.772F);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 271.4187F;
      NumberUtils.min(doubleArray0);
      NumberUtils.toLong("-0XThe Array must not be null");
      NumberUtils.isNumber("---0XrBmFL<%*%YC0Dv|k\"");
      NumberUtils.toShort("-0XThe Array must not be null");
      try { 
        NumberUtils.createNumber(" is not a valid number.");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         //  is not a valid number. is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short) (-9334);
      shortArray0[1] = (short)48;
      shortArray0[2] = (short)1869;
      shortArray0[3] = (short) (-2239);
      NumberUtils.max(shortArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (short)1869;
      NumberUtils.min(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = (int) (short) (-9334);
      intArray1[1] = (int) (short) (-9334);
      intArray1[2] = (int) (short) (-9334);
      intArray1[3] = (int) (short)1869;
      NumberUtils.max(intArray1);
      String string0 = "---";
      NumberUtils.toInt("---");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)64;
      byteArray0[2] = (byte)16;
      NumberUtils.max(byteArray0);
      NumberUtils.min(shortArray0);
      try { 
        NumberUtils.createNumber("---");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // --- is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      NumberUtils.isNumber("0xqUi@OJE:(FdQZ");
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-572.842069037898);
      doubleArray0[1] = 1272.58817244583;
      doubleArray0[2] = 1076.09080559066;
      doubleArray0[4] = (-572.842069037898);
      doubleArray0[4] = 2735.863102445;
      doubleArray0[5] = (-3.7425967685922394);
      NumberUtils.isNumber("---0X6BmFL<%*%YCYDv9|k\"");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte) (-116);
      NumberUtils.min(byteArray0);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) (byte)20;
      floatArray0[1] = (float) (byte)20;
      floatArray0[2] = 44.86434F;
      floatArray0[3] = (float) (byte) (-116);
      floatArray0[4] = (float) (byte)20;
      NumberUtils.toDouble("A blank string is not a valid number");
      NumberUtils.toFloat("0xqUi@OJE:(FdQZ");
      NumberUtils.toFloat("---0X6BmFL<%*%YCYDv9|k\"");
      long[] longArray0 = new long[4];
      longArray0[0] = (long) (byte)20;
      longArray0[1] = (long) (byte) (-116);
      longArray0[2] = (long) (byte) (-116);
      longArray0[3] = (long) (byte) (-116);
      NumberUtils.min(longArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("0xqUi@OJE:(FdQZ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"xqUi@\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      NumberUtils.createNumber((String) null);
      NumberUtils.min((byte)0, (byte)0, (byte)0);
      NumberUtils.toByte((String) null);
      NumberUtils.createLong((String) null);
      NumberUtils.toInt("0X", (int) (byte)0);
      long[] longArray0 = new long[9];
      longArray0[0] = (long) 0;
      longArray0[1] = (long) 0;
      longArray0[2] = (long) 0;
      longArray0[3] = (long) 0;
      longArray0[4] = (long) 0;
      longArray0[5] = (long) (byte)0;
      longArray0[6] = (long) (byte)0;
      longArray0[7] = (long) (byte)0;
      longArray0[8] = (long) (byte)0;
      NumberUtils.max(longArray0);
      NumberUtils.isNumber("0X");
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) (byte)0;
      doubleArray0[1] = (double) (byte)0;
      doubleArray0[2] = (double) 0L;
      doubleArray0[3] = (double) 0L;
      doubleArray0[4] = (double) 0L;
      doubleArray0[5] = (double) 0L;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0L;
      doubleArray0[8] = (-2959.780404);
      NumberUtils.min(doubleArray0);
      try { 
        NumberUtils.createNumber("0X");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      NumberUtils.max((-1), (-1), (-1));
      NumberUtils.max((short)2469, (short) (-4477), (short)1630);
      NumberUtils.toByte("", (byte) (-30));
      NumberUtils.toInt("");
      long[] longArray0 = new long[5];
      longArray0[0] = (long) (-1);
      longArray0[1] = (long) (short)2469;
      longArray0[2] = (long) (short)1630;
      longArray0[3] = (long) (byte) (-30);
      longArray0[0] = (long) (-1);
      Long long0 = new Long(1630L);
      NumberUtils.max(longArray0);
      NumberUtils.min((byte) (-30), (byte) (-30), (byte)7);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 2469L;
      floatArray0[1] = (float) (short)1630;
      floatArray0[2] = (float) 1630L;
      longArray0[2] = (-1L);
      floatArray0[4] = (float) (byte) (-30);
      floatArray0[1] = (float) 0L;
      NumberUtils.min(floatArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)7;
      NumberUtils.max(byteArray0);
      NumberUtils.toFloat("V7DAwQ,g_ f5]R~[O");
      try { 
        NumberUtils.createNumber("-0xV7DAwQ,g_ f5]R~[O");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-V7DAwQ,g_ f5]R~[O\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
